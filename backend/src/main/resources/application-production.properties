# Configuração de produção - Sistema de Controle Financeiro
# IMPORTANTE: Configure estas variáveis através de variáveis de ambiente em produção

# Configuração do ambiente
app.environment=production

# Configuração do banco de dados PostgreSQL para produção
# NUNCA deixe credenciais hardcoded em produção!
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/financeirodb}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Desabilitar console H2 em produção
spring.h2.console.enabled=false

# Configurações JPA para produção
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.defer-datasource-initialization=false

# Desabilitar inicialização automática do banco
spring.sql.init.mode=never

# Configurações da aplicação
server.port=${PORT:8080}
spring.application.name=Sistema de Controle Financeiro

# Desabilitar Swagger em produção
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Configurações de data e hora
spring.jackson.date-format=yyyy-MM-dd
spring.jackson.time-zone=America/Sao_Paulo

# JWT Configuration - USE VARIÁVEIS DE AMBIENTE!
# Gere uma chave secreta forte: openssl rand -base64 64
jwt.secret=${JWT_SECRET:CHANGE_THIS_IN_PRODUCTION_USE_ENVIRONMENT_VARIABLE}
jwt.expiration=${JWT_EXPIRATION:3600000}

# Configurações de logging para produção
logging.level.com.financeiro=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate=WARN

# Configurações de servidor para produção
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# Configurações de SSL/TLS (quando usar HTTPS)
# server.ssl.enabled=true
# server.ssl.key-store=${SSL_KEYSTORE_PATH}
# server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
# server.ssl.key-store-type=PKCS12

# Configurações de rate limiting (se implementado)
# app.rate-limit.requests-per-minute=60
# app.rate-limit.requests-per-hour=1000

# Configurações de monitoramento
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Configurações de cache (se implementado)
# spring.cache.type=redis
# spring.redis.host=${REDIS_HOST:localhost}
# spring.redis.port=${REDIS_PORT:6379}
# spring.redis.password=${REDIS_PASSWORD:}

# Configurações de email (se implementado)
# spring.mail.host=${MAIL_HOST}
# spring.mail.port=${MAIL_PORT:587}
# spring.mail.username=${MAIL_USERNAME}
# spring.mail.password=${MAIL_PASSWORD}
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true